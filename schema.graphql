enum BadgeType {
  CREDENTIAL
  IDENTITY
  SKILL
}

type User @entity {
  id: ID!
  address: Bytes! # address
  badges: [UserBadge!]  @derivedFrom(field: "user") # Badge
  badgesCount: BigInt! # Badge
}

type Badge @entity {
  id: ID!
  collectionId: BigInt! # uint256
  uri: String
  issuer: Bytes # address
  type: BadgeType # string
  source: String # string
  claimers: [UserBadge!] @derivedFrom(field: "badge") # User
}

type UserBadge @entity {
  id: ID!
  user: User!
  badge: Badge!
  value: BigInt! # uint256
  timestamp: BigInt! # uint32
  identityBadgeData: IdentityBadgeData @derivedFrom(field: "userBadge") # bytes
}

type IdentityBadgeData @entity {
  id: ID!
  accountId: String!
  username: String!
  userBadge: UserBadge!
}

# type Attestation @entity {
#   id: ID!
#   attestation_collectionId: BigInt! # uint256
#   attestation_owner: Bytes! # address
#   attestation_issuer: Bytes! # address
#   attestation_value: BigInt! # uint256
#   attestation_timestamp: BigInt! # uint32
#   attestation_extraData: Bytes! # bytes
# }

# type AttestationDeleted @entity {
#   id: ID!
#   attestation_collectionId: BigInt! # uint256
#   attestation_owner: Bytes! # address
#   attestation_issuer: Bytes! # address
#   attestation_value: BigInt! # uint256
#   attestation_timestamp: BigInt! # uint32
#   attestation_extraData: Bytes! # bytes
# }

# type AttestationRecorded @entity {
#   id: ID!
#   attestation_collectionId: BigInt! # uint256
#   attestation_owner: Bytes! # address
#   attestation_issuer: Bytes! # address
#   attestation_value: BigInt! # uint256
#   attestation_timestamp: BigInt! # uint32
#   attestation_extraData: Bytes! # bytes
# }

# type IssuerAuthorized @entity {
#   id: ID!
#   issuer: Bytes! # address
#   firstCollectionId: BigInt! # uint256
#   lastCollectionId: BigInt! # uint256
# }

# type IssuerUnauthorized @entity {
#   id: ID!
#   issuer: Bytes! # address
#   firstCollectionId: BigInt! # uint256
#   lastCollectionId: BigInt! # uint256
# }

# type OwnershipTransferred @entity {
#   id: ID!
#   previousOwner: Bytes! # address
#   newOwner: Bytes! # address
# }

# type Paused @entity {
#   id: ID!
#   account: Bytes! # address
# }

# type Unpaused @entity {
#   id: ID!
#   account: Bytes! # address
# }